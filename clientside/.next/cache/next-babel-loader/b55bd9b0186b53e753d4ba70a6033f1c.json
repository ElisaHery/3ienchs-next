{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport reducer1 from \"./reducer1\"; // L'état de départ peut être un combiner de plusieurs reducers pour différencier plusieurs logique dans notre code\n// Pour l'instant nous n'utiliserons qu'un seul reducer (App)\n\nconst rootReducer = combineReducers({\n  reducer1\n}); // On exporte notre rootReducer pour pouvoir l'importer quand nous allons initialiser notre app\n\nexport default rootReducer;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/3ienchs-next/3ienchs-next-v1/clientside/redux/reducers/index.js"],"names":["combineReducers","reducer1","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGF,eAAe,CAAC;AAClCC,EAAAA;AADkC,CAAD,CAAnC,C,CAIA;;AACA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport reducer1 from \"./reducer1\";\n\n// L'état de départ peut être un combiner de plusieurs reducers pour différencier plusieurs logique dans notre code\n// Pour l'instant nous n'utiliserons qu'un seul reducer (App)\nconst rootReducer = combineReducers({\n  reducer1\n});\n\n// On exporte notre rootReducer pour pouvoir l'importer quand nous allons initialiser notre app\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}