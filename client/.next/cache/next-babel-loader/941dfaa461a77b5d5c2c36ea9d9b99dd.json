{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { actionTypes } from \"./../actions\";\nvar exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n}; // function App(state = {}, action) {\n//   switch (action.type) {\n//     case \"INITIALIZE\":\n//       return {\n//         appName: action.label,\n//         initialize: true\n//       };\n//     default:\n//       return state;\n//   }\n// }\n// REDUCERS\n\nvar reducer1 = function reducer1() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case actionTypes.TICK:\n    //   return Object.assign({}, state, {\n    //     lastUpdate: action.ts,\n    //     light: !!action.light\n    //   });\n    case actionTypes.INCREMENT:\n      console.log(\"depuis reducer1\");\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer1;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/3ienchs-next/3ienchs-next-v1/client/redux/reducers/reducer1.js"],"names":["actionTypes","exampleInitialState","lastUpdate","light","count","reducer1","state","action","type","INCREMENT","console","log","DECREMENT","RESET"],"mappings":";AAAA,SAASA,WAAT,QAA4B,cAA5B;AAEA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,UAAU,EAAE,CADc;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA5B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCL,mBAAgC;AAAA,MAAXM,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACA;AACA;AACA,SAAKR,WAAW,CAACS,SAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO,eAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKJ,WAAW,CAACY,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKJ,WAAW,CAACa,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEH,mBAAmB,CAACG;AADG,OAAzB,CAAP;;AAGF;AACE,aAAOE,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,QAAf","sourcesContent":["import { actionTypes } from \"./../actions\";\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\n\n// function App(state = {}, action) {\n//   switch (action.type) {\n//     case \"INITIALIZE\":\n//       return {\n//         appName: action.label,\n//         initialize: true\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// REDUCERS\nconst reducer1 = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    // case actionTypes.TICK:\n    //   return Object.assign({}, state, {\n    //     lastUpdate: action.ts,\n    //     light: !!action.light\n    //   });\n    case actionTypes.INCREMENT:\n      console.log(\"depuis reducer1\");\n      return Object.assign({}, state, {\n        count: state.count + 1\n      });\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      });\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer1;\n"]},"metadata":{},"sourceType":"module"}